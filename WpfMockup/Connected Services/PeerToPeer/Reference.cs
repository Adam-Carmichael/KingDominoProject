//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfMockup.PeerToPeer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PeerToPeer.IPeerService")]
    public interface IPeerService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPeerService/ReceiveMessage")]
        void ReceiveMessage(PeerManager.SerializedMessage message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPeerService/ReceiveMessage")]
        System.Threading.Tasks.Task ReceiveMessageAsync(PeerManager.SerializedMessage message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPeerService/ReceiveSysMessage")]
        void ReceiveSysMessage(PeerManager.PeerSysMessage message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPeerService/ReceiveSysMessage")]
        System.Threading.Tasks.Task ReceiveSysMessageAsync(PeerManager.PeerSysMessage message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPeerServiceChannel : WpfMockup.PeerToPeer.IPeerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PeerServiceClient : System.ServiceModel.ClientBase<WpfMockup.PeerToPeer.IPeerService>, WpfMockup.PeerToPeer.IPeerService {
        
        public PeerServiceClient() {
        }
        
        public PeerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PeerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PeerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PeerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ReceiveMessage(PeerManager.SerializedMessage message) {
            base.Channel.ReceiveMessage(message);
        }
        
        public System.Threading.Tasks.Task ReceiveMessageAsync(PeerManager.SerializedMessage message) {
            return base.Channel.ReceiveMessageAsync(message);
        }
        
        public void ReceiveSysMessage(PeerManager.PeerSysMessage message) {
            base.Channel.ReceiveSysMessage(message);
        }
        
        public System.Threading.Tasks.Task ReceiveSysMessageAsync(PeerManager.PeerSysMessage message) {
            return base.Channel.ReceiveSysMessageAsync(message);
        }
    }
}
